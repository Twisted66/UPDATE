---
import Layout from '../layouts/Layout.astro';

// Project data array for easier management
const projects = [
  { id: 'project1', slug: 'al-talah-triple-bridges', title: 'Al Talah Triple Bridges', category: 'Infrastructure', description: 'Three strategically designed bridges enhancing connectivity along Al Talah Road, Ajman.', features: ['Triple Bridge Design', 'Enhanced Connectivity', 'Road Safety', 'Durable Construction'], image: '/api/placeholder/400/250?text=Al+Talah+Triple+Bridges' },
  { id: 'project2', slug: 'dubai-hills-overpass', title: 'Dubai Hills Overpass', category: 'Infrastructure', description: 'An overpass bridge improving traffic flow in the Dubai Hills Estate.', features: ['Traffic Efficiency', 'Modern Design', 'Safety Features', 'Urban Integration'], image: '/api/placeholder/400/250?text=Dubai+Hills+Overpass' },
  // Add more projects here as needed, up to project30
  { id: 'project30', slug: 'fewa-duct-future', title: 'FEWA Duct Future', category: 'Infrastructure', description: 'Future duct and cable containment system in Sharjah and Ras Al Khaimah.', features: ['Duct System', 'Cable Containment', 'Future-Ready', 'Infrastructure Upgrade'], image: '/api/placeholder/400/250?text=FEWA+Duct+Future' },
];

// Handle redirection based on slug
const { slug } = Astro.params;
if (slug) {
  const project = projects.find(p => p.slug === slug);
  if (project) {
    // Redirect or render specific project page (simulated here)
    return Astro.redirect(`/projects/${project.slug}`);
  }
}
---

<Layout 
  title="Projects" 
  description="Explore our portfolio of exceptional construction projects showcasing our expertise in residential, commercial, and sustainable building."
>
  <!-- Fixed Background -->
  <div class="fixed inset-0 -z-10 bg-gradient-to-br from-black/80 via-gray-900 to-black">
    <div class="absolute inset-0 z-0">
      <div class="bg-[radial-gradient(circle_at_30%_30%,rgba(255,107,53,0.1)_0%,transparent_70%)] absolute inset-0"></div>
      <div class="bg-[radial-gradient(circle_at_70%_70%,rgba(255,107,53,0.1)_0%,transparent_70%)] absolute inset-0"></div>
    </div>
  </div>

  <div class="container mx-auto">
    <!-- Hero Section -->
    <section class="projects-hero relative h-[500px] flex items-center justify-center overflow-hidden">
      <div class="hero-background absolute inset-0 bg-cover bg-center opacity-30" style="background-image: url('/api/placeholder/1400/400');"></div>
      <div class="hero-overlay absolute inset-0 bg-black/60"></div>
      <div class="hero-content relative z-10 text-center max-w-3xl px-5">
        <h1 class="projects-hero-title text-5xl font-bold mb-4 text-white">Our Projects</h1>
        <p class="projects-hero-subtitle text-lg text-gray-300">Showcasing our expertise through a diverse portfolio of exceptional construction projects</p>
      </div>
    </section>

    <!-- Projects Carousel Section -->
    <section class="services-carousel py-20">
      <div class="container mx-auto px-6">
        <div class="text-center mb-10">
          <p class="text-xl max-w-3xl mx-auto text-gray-300 animate-fade-in">Explore our showcase of exceptional construction projects</p>
        </div>

        <!-- Project Tabs -->
        <div class="services-tabs flex flex-wrap justify-center gap-4 mb-10">
          {projects.map((project, index) => (
            <button class={`service-tab px-6 py-3 rounded-full font-medium bg-white/5 border border-white/10 transition-all duration-300 hover:bg-primary/20 hover:text-primary ${index === 0 ? 'active text-white bg-primary/20' : 'text-gray-400'}`} data-tab={project.id}>{project.title}</button>
          ))}
        </div>

        <!-- Project Panels -->
        <div class="services-content relative min-h-[500px] perspective-1000">
          {projects.map((project, index) => (
            <div class={`service-panel absolute w-full transition-all duration-700 ${index === 0 ? 'active opacity-100 translate-x-0 rotate-y-0' : 'opacity-0 translate-x-full rotate-y-15'}`} id={`${project.id}-panel`}>
              <div class="service-content flex flex-col lg:flex-row items-center gap-8 lg:gap-16 bg-white/5 backdrop-blur-md rounded-xl p-6 shadow-xl">
                <div class="service-image w-full lg:w-1/2 rounded-xl overflow-hidden shadow-2xl relative group">
                  <img src={project.image} alt={project.title} class="w-full h-[300px] object-cover transition-transform duration-500 group-hover:scale-105" />
                  <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                </div>
                <div class="service-details w-full lg:w-1/2">
                  <span class="service-category inline-block px-4 py-1 bg-primary/20 text-primary text-sm rounded-full mb-4 animate-fade-in">{project.category}</span>
                  <h2 class="text-3xl font-bold mb-6 text-white animate-slide-in-right">{project.title}</h2>
                  <p class="text-lg leading-relaxed mb-6 text-gray-300">{project.description}</p>
                  <ul class="service-features grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
                    {project.features.map((feature, i) => (
                      <li class="flex items-start animate-fade-in" style={`animation-delay: ${i * 100}ms`}>
                        <span class="feature-icon text-primary mr-3">✓</span>
                        <span class="text-gray-300">{feature}</span>
                      </li>
                    ))}
                  </ul>
                  <a href={`/projects/${project.slug}`} class="inline-block px-8 py-3 bg-gradient-primary text-white font-semibold rounded transition-all duration-300 hover:shadow-lg hover:shadow-primary/30 hover:transform hover:-translate-y-1 animate-bounce-in">View Project</a>
                </div>
              </div>
            </div>
          ))}
          <div class="carousel-controls flex justify-center mt-20 gap-4">
            <button class="carousel-btn bg-transparent border-2 border-primary text-primary w-12 h-12 rounded-full flex items-center justify-center transition-all duration-300 hover:bg-primary hover:text-black text-xl" id="prevBtn">←</button>
            <button class="carousel-btn bg-transparent border-2 border-primary text-primary w-12 h-12 rounded-full flex items-center justify-center transition-all duration-300 hover:bg-primary hover:text-black text-xl" id="nextBtn">→</button>
          </div>
        </div>
      </div>
    </section>

    <!-- Stats, Clients, and CTA Sections remain unchanged -->
    <!-- Include them here if needed -->
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const serviceTabs = document.querySelectorAll('.service-tab');
    const servicePanels = document.querySelectorAll('.service-panel');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const panelIds = Array.from(serviceTabs).map(tab => tab.getAttribute('data-tab'));
    let currentIndex = 0;

    function showPanel(index, direction = 'next') {
      servicePanels.forEach(panel => {
        panel.classList.remove('active', 'opacity-100', 'translate-x-0', 'rotate-y-0');
        if (panel.id === `${panelIds[index]}-panel`) {
          panel.classList.add('active', 'opacity-100', 'translate-x-0', 'rotate-y-0');
        } else {
          panel.classList.add(direction === 'next' ? 'translate-x-full' : 'translate-x-[-100%]', direction === 'next' ? 'rotate-y-15' : 'rotate-y--15');
        }
      });

      serviceTabs.forEach(tab => {
        tab.classList.remove('active', 'text-white', 'bg-primary/20');
        tab.classList.add('text-gray-400', 'bg-white/5');
      });
      const activeTab = document.querySelector(`.service-tab[data-tab="${panelIds[index]}"]`);
      if (activeTab) activeTab.classList.add('active', 'text-white', 'bg-primary/20');
    }

    serviceTabs.forEach(tab => {
      tab.addEventListener('click', function() {
        const tabId = this.getAttribute('data-tab');
        const newIndex = panelIds.indexOf(tabId);
        const direction = newIndex > currentIndex ? 'next' : 'prev';
        currentIndex = newIndex;
        showPanel(currentIndex, direction);
      });
    });

    prevBtn?.addEventListener('click', function() {
      currentIndex = (currentIndex - 1 + panelIds.length) % panelIds.length;
      showPanel(currentIndex, 'prev');
    });

    nextBtn?.addEventListener('click', function() {
      currentIndex = (currentIndex + 1) % panelIds.length;
      showPanel(currentIndex, 'next');
    });

    showPanel(currentIndex);
  });
</script>

<style>
  :root {
    --primary: #f97316;
    --accent: #fb923c;
    --gradient-primary: linear-gradient(to right, #f97316, #fb923c);
  }

  .perspective-1000 { perspective: 1000px; }
  .service-tab.active { background: var(--primary) !important; color: white !important; box-shadow: 0 4px 14px rgba(255, 107, 53, 0.3); }
  .service-panel { transform-style: preserve-3d; transition: all 0.7s ease-in-out; }
  
  .animate-fade-in { animation: fadeIn 1s ease-out forwards; }
  .animate-slide-in-right { animation: slideInRight 0.8s ease-out forwards; }
  .animate-bounce-in { animation: bounceIn 0.8s ease-out forwards; }

  @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
  @keyframes slideInRight { from { opacity: 0; transform: translateX(20px); } to { opacity: 1; transform: translateX(0); } }
  @keyframes bounceIn { 0% { transform: scale(0.8); opacity: 0; } 60% { transform: scale(1.05); opacity: 1; } 100% { transform: scale(1); } }

  @media (max-width: 768px) {
    .services-tabs { gap: 2; }
    .service-tab { width: 45%; margin-bottom: 8px; }
    .service-content { padding: 1rem; }
    .service-image { margin-bottom: 1rem; }
  }
</style>