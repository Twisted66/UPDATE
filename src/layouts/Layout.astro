---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
  title: string;
  description?: string;
}

const { title, description = "Ultraction General Contracting delivers exceptional construction services with precision, quality, and dedication." } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title} - Ultraction General Contracting</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
  </head>
  <body class="bg-white dark:bg-black text-gray-900 dark:text-white overflow-x-hidden opacity-0 animate-fadeIn transition-colors duration-300">
    <div class="theme-toggle fixed top-4 right-4 z-[1001] cursor-pointer bg-white dark:bg-black p-2 rounded-full shadow-lg">
      <button id="themeToggle" class="text-2xl">
        <i class="fas fa-sun text-yellow-500 dark:hidden"></i>
        <i class="fas fa-moon text-blue-500 hidden dark:block"></i>
      </button>
    </div>
    <Header />
    <slot />
    <Footer />

    <script is:inline>
      // Theme toggle functionality
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }

      window.localStorage.setItem('theme', theme);

      document.getElementById('themeToggle').addEventListener('click', () => {
        const element = document.documentElement;
        element.classList.toggle('dark');

        const isDark = element.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
    </script>

    <style is:global>
      :root {
        --primary: #b38728;
        --secondary: #8b4513;
        --accent: #cd7f32;
        --dark: #000000;
        --light: #f5f5f5;
      }
      
      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }
      
      .animate-fadeIn {
        animation: fadeIn 1s ease forwards;
      }
      
      @keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
      }
      
      @keyframes arrowBounce {
        0%, 20%, 50%, 80%, 100% {
          transform: translateY(0) rotate(45deg);
        }
        40% {
          transform: translateY(10px) rotate(45deg);
        }
        60% {
          transform: translateY(5px) rotate(45deg);
        }
      }
      
      .bg-gradient-primary {
        background-image: linear-gradient(135deg, #b38728, #cd7f32);
      }
      
      .text-gradient-primary {
        background: linear-gradient(135deg, #b38728, #cd7f32);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      /* Dark mode transitions */
      .dark .transition-colors {
        transition-property: background-color, border-color, color, fill, stroke;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 300ms;
      }
    </style>
  </body>
</html>